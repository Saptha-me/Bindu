repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
        args: ['--maxkb=1024']  # 1MB limit to prevent large files

  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.11.9
    hooks:
      - id: ruff
        args: ["--fix"]
      - id: ruff-format

  - repo: local
    hooks:
      # - id: ty
      #   name: ty type checker
      #   entry: ty check
      #   language: system
      #   types: [python]
      #   pass_filenames: false

      - id: pytest
        name: pytest with coverage
        entry: bash -c 'pytest -n auto --cov=bindu --cov-report= && coverage report --skip-covered --fail-under=70'
        language: system
        pass_filenames: false
        always_run: true
        verbose: true

  - repo: https://github.com/PyCQA/bandit
    rev: '1.8.3'
    hooks:
      - id: bandit
        args: ["-c", "bandit.yaml", "-lll"]
        exclude: ^(tests/|examples/)
        additional_dependencies: ["bandit[toml]"]

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: Check for secrets using baseline
        args: ['--baseline', '.secrets.baseline']
        exclude: 'package.lock.json'

  - repo: local
    hooks:
      - id: init-secrets-baseline
        name: Initialize secrets baseline (manual)
        entry: bash -c 'detect-secrets scan > .secrets.baseline && detect-secrets audit .secrets.baseline'
        language: system
        pass_filenames: false
        stages: [manual]

      - id: verify-secrets-audited
        name: Verify audited secrets before push
        entry: >
          bash -c 'python3 -c "import json, sys;
          data=json.load(open(\".secrets.baseline\"));
          unaudited=[k for k,v in data[\"results\"].items()
          if any(i.get(\"is_secret\") is None for i in v.values())];
          sys.exit(1 if unaudited else 0)" ||
          (echo "ERROR: unaudited secrets. Run: pre-commit run init-secrets-baseline --hook-stage manual" && exit 1)'
        language: system
        pass_filenames: false
        stages: [pre-push]

      - id: update-secrets-baseline
        name: Update secrets baseline (manual)
        entry: bash -c 'detect-secrets scan --update .secrets.baseline && detect-secrets audit .secrets.baseline'
        language: system
        pass_filenames: false
        stages: [manual]

  - repo: https://github.com/PyCQA/pydocstyle
    rev: 6.3.0
    hooks:
      - id: pydocstyle
